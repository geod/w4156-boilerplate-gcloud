version: 2
jobs:
  build:
    working_directory: ~/gennyc
    docker:
      - image: google/cloud-sdk
    environment:
      - PYTHONPATH: ${PYTHONPATH}:../google_appengine
    steps:
      - checkout
      - run:
          name: install_deps
          command: |
            apt install -y unzip libmysqlclient-dev google-cloud-sdk-app-engine-python
            curl -o ~/google_appengine_1.9.30.zip https://storage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.30.zip
            unzip -q -d ~/ ~/google_appengine_1.9.30.zip

            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                echo $CLIENT_SECRET_UAT | base64 -d > ~/client-secret.json  
            else
                echo $CLIENT_SECRET_DEV | base64 -d > ~/client-secret.json
            fi

            mkdir -p my_lib
            pip install -r requirements.txt -t my_lib
            gcloud auth activate-service-account --key-file ~/client-secret.json 

            if [ "${CIRCLE_BRANCH}" == "master" ]; then 
                gcloud config set project $GCLOUD_PROJECT_ID_UAT
            else
                gcloud config set project $GCLOUD_PROJECT_ID_DEV
            fi
      - run:
          name: tests 
          command: |
            python tests/test_main.py 

  deploy-dev:
    docker:
      - image: google/cloud-sdk:alpine
    working_directory: ~/gennyc
    steps:
      - checkout

      - run:
          name: Authenticate DEV with Google Cloud
          command: |
            echo $CLIENT_SECRET_DEV | base64 -d > ~/client-secret.json
            gcloud config set project $GCLOUD_PROJECT_ID_DEV
            gcloud auth activate-service-account --key-file=../client-secret.json  
      - run:
          name: Deploy app to DEV Google App Engine
          command: |
            gcloud config set project $GCLOUD_PROJECT_ID_DEV
            gcloud -q app deploy app.yaml --promote --version=1

  deploy-uat:
    docker:
      - image: google/cloud-sdk:alpine
    working_directory: ~/gennyc
    steps:
      - checkout

      - run:
          name: Authenticate UAT with Google Cloud
          command: |
            echo $CLIENT_SECRET_UAT | base64 -d > ~/client-secret.json
            gcloud config set project $GCLOUD_PROJECT_ID_UAT
            gcloud auth activate-service-account --key-file=../client-secret.json  
      - run:
          name: Deploy app to UAT Google App Engine
          command: |
            gcloud config set project $GCLOUD_PROJECT_ID_UAT
            gcloud -q app deploy app.yaml --promote --version=1

  deploy-prod:
    docker:
      - image: google/cloud-sdk:alpine
    working_directory: ~/gennyc
    steps:
      - checkout

      - run:
          name: Authenticate with PRODUCTION Google Cloud
          command: |
            echo $CLIENT_SECRET_PROD | base64 -d > ~/client-secret.json
            gcloud config set project $GCLOUD_PROJECT_ID_PROD
            gcloud auth activate-service-account --key-file=../client-secret.json  
      - run:
          name: Deploy app to PRODUCTION Google App Engine
          command: |
            gcloud config set project $GCLOUD_PROJECT_ID_PROD
            gcloud -q app deploy app.yaml --promote --version=1

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy-dev:
          requires:
            - build
          filters:
            branches:
              only:
                - development
      - deploy-uat:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - hold-prod:
          type: approval
          requires:
            - deploy-uat
      - deploy-prod:
          requires:
            - hold-prod